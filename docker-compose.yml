version: "3.8"

services:
  postgres:
    container_name: service-postgres
    image: postgres:14
    environment:
      - POSTGRES_DB=authentification_service_db_1
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - '5432'
    volumes:
      - ./postgresql/schemas:/docker-entrypoint-initdb.d
      - ./.pgdata:/var/lib/postgresql/data
    networks:
      - postgres

  authentification_service-container:
    image: ghcr.io/userver-framework/ubuntu-22.04-userver-base-ci:latest
    privileged: true
    environment:
      - POSTGRES_DB=authentification_service_db_1
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - PREFIX=${PREFIX:-~/.local}
      - CC
      - CCACHE_DIR=/authentification_service/.ccache
      - CCACHE_HASHDIR
      - CCACHE_NOHASHDIR
      - CCACHE_PREFIX
      - CCACHE_SIZE
      - CMAKE_OPTS
      - CORES_DIR=/cores
      - CXX
      - MAKE_OPTS
      - CMAKE_COMMON_FLAGS
    volumes:
      - .:/authentification_service:rw
      - ./third_party/userver/tools/docker:/tools:ro
      - ${TC_CORES_DIR:-./.cores}:/cores:rw
    ports:
      - '8080:8080'
    working_dir: /authentification_service
    entrypoint:
      - /tools/run_as_user.sh
    depends_on:
      - postgres
    networks:
      - postgres
      - dockerbridge

networks:
  postgres:
    driver: bridge
  dockerbridge:
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
      config:
        - subnet: 2001:3984:3989::/64
          gateway: 2001:3984:3989::1